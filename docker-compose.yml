services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: picxel-puzzle-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-picxel_puzzle}
      POSTGRES_USER: ${POSTGRES_USER:-picxel_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-picxel_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d/migrations:ro
    networks:
      - picxel-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U picxel_user -d picxel_puzzle"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: picxel-puzzle-app
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${PORT:-5000}
      - DATABASE_URL=${DATABASE_URL:-postgresql://picxel_user:picxel_password@postgres:5432/picxel_puzzle}
    ports:
      - "5000:5000"
    volumes:
      - ./uploads:/app/uploads
      - app_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - picxel-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development version (alternative service)
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: picxel-puzzle-app-dev
    environment:
      - NODE_ENV=development
      - PORT=${PORT:-5000}
      - DATABASE_URL=${DATABASE_URL:-postgresql://picxel_user:picxel_password@postgres:5432/picxel_puzzle}
    ports:
      - "5000:5000"
    volumes:
      - .:/app
      - /app/node_modules
      - ./uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - picxel-network
    profiles:
      - dev

volumes:
  postgres_data:
    driver: local
  app_logs:
    driver: local

networks:
  picxel-network:
    driver: bridge

# Alternative: Using Docker Secrets (uncomment to use)
# secrets:
#   db_password:
#     file: ./secrets/db_password.txt
#   database_url:
#     file: ./secrets/database_url.txt
